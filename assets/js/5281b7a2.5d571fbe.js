"use strict";(self.webpackChunkjavascript_compiler_in_rust=self.webpackChunkjavascript_compiler_in_rust||[]).push([[927],{9613:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(9496);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=s(r),f=o,d=m["".concat(l,".").concat(f)]||m[f]||u[f]||a;return r?n.createElement(d,i(i({ref:t},p),{},{components:r})):n.createElement(d,i({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1298:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var n=r(2081),o=(r(9496),r(9613));const a={id:"architecture",title:"Architecture Overview"},i=void 0,c={unversionedId:"architecture",id:"architecture",title:"Architecture Overview",description:"For our book, we will be applying the standard compiler frontend phases:",source:"@site/docs/architecture.md",sourceDirName:".",slug:"/architecture",permalink:"/javascript-compiler-in-rust/docs/architecture",draft:!1,tags:[],version:"current",frontMatter:{id:"architecture",title:"Architecture Overview"},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/javascript-compiler-in-rust/docs/intro"},next:{title:"Lexer",permalink:"/javascript-compiler-in-rust/docs/lexer"}},l={},s=[{value:"Performance",id:"performance",level:2}],p={toc:s};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"For our book, we will be applying the standard compiler frontend phases:"),(0,o.kt)("p",null,"Source Text -> Token -> Lexer -> Parser -> AST"),(0,o.kt)("p",null,"Writing a JavaScript parser is actually really easy,\nit is 10% architectural decisions and 90% hard work on the fine-grained details."),(0,o.kt)("p",null,"The architectural decisions will mostly affect two categories:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"the performance of your compiler"),(0,o.kt)("li",{parentName:"ul"},"how nice it is to consume your AST")),(0,o.kt)("h2",{id:"performance"},"Performance"),(0,o.kt)("p",null,"The key to a performant Rust program is to ",(0,o.kt)("em",{parentName:"p"},"make less momory allocations")," and ",(0,o.kt)("em",{parentName:"p"},"use less cpu cycles"),"."),(0,o.kt)("p",null,"It is mostly transparent when a momory allocation is made just by looking for heap allocated structs such as ",(0,o.kt)("inlineCode",{parentName:"p"},"Vec")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"Box"),".\nReasoning about their usage will give you a sense of how fast your program will be."),(0,o.kt)("p",null,"With zero cost abstraction, we don't need to worry too much about abstractions causing slower performance.\nBecareful with your algorithmic complexities and you will be all good to go."))}u.isMDXComponent=!0}}]);